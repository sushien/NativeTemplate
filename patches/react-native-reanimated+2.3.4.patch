diff --git a/node_modules/react-native-reanimated/android/build.gradle b/node_modules/react-native-reanimated/android/build.gradle
index 794d95b..fcb8cc6 100644
--- a/node_modules/react-native-reanimated/android/build.gradle
+++ b/node_modules/react-native-reanimated/android/build.gradle
@@ -28,28 +28,6 @@ abstract class replaceSoTask extends DefaultTask {
     }
 }

-def getCurrentFlavor() {
-    Gradle gradle = getGradle()
-    String taskRequestName = gradle.getStartParameter().getTaskRequests().toString()
-    Pattern pattern = Pattern.compile("(assemble|bundle|install|generate)(\\w*)(Release|Debug)")
-    Matcher matcher = pattern.matcher(taskRequestName)
-
-    if(matcher.find()) {
-        return matcher.group(2)
-    }
-
-    return "NOT-FOUND"
-}
-
-def replaceSoTaskDebug
-def replaceSoTaskRelease
-if(Integer.parseInt(minor) < 65) {
-    tasks.register("replaceSoTaskDebug", replaceSoTask)
-    tasks.register("replaceSoTaskRelease", replaceSoTask)
-    replaceSoTaskDebug = project.getTasks().getByPath(":react-native-reanimated:replaceSoTaskDebug")
-    replaceSoTaskRelease = project.getTasks().getByPath(":react-native-reanimated:replaceSoTaskRelease")
-}
-
 rootProject.getSubprojects().forEach({project ->
     if (project.plugins.hasPlugin("com.android.application")) {
         if(project.ext.react.enableHermes) {
@@ -58,26 +36,11 @@ rootProject.getSubprojects().forEach({project ->

         if(project.getProperties().get("android") && Integer.parseInt(minor) < 65) {
             def projectProperties = project.getProperties()
-            final NOTFOUND = "NOT-FOUND"
-            if(!NOTFOUND.equals(getCurrentFlavor()) && (!projectProperties.get("reanimated")
-                    || (projectProperties.get("reanimated") && projectProperties.get("reanimated").get("enablePackagingOptions")))
-            ) {
-                def flavorString = getCurrentFlavor()
+            if(projectProperties.get("reanimated") && projectProperties.get("reanimated").get("enablePackagingOptions")) {
                 replaceSoTask.appName = project.getProperties().path
                 replaceSoTask.buildDir = project.getProperties().buildDir
                 def appName = project.getProperties().path
-
-                replaceSoTaskDebug.dependsOn(
-                        project.getTasks().getByPath("${appName}:merge${flavorString}DebugNativeLibs"),
-                        project.getTasks().getByPath("${appName}:strip${flavorString}DebugDebugSymbols")
-                )
-                project.getTasks().getByPath("${appName}:package${flavorString}Debug").dependsOn(replaceSoTaskDebug)
-
-                replaceSoTaskRelease.dependsOn(
-                        project.getTasks().getByPath("${appName}:merge${flavorString}ReleaseNativeLibs"),
-                        project.getTasks().getByPath("${appName}:strip${flavorString}ReleaseDebugSymbols")
-                )
-                project.getTasks().getByPath("${appName}:package${flavorString}Release").dependsOn(replaceSoTaskRelease)
+                project.getTasks().getByPath("${appName}:packageRelease")
             }
         }
     }
